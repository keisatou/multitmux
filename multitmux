#!/bin/bash
# vim: filetype=sh

# Global variables
sn=tmux

# Functions
usage () {
    local pname=$(basename $0)
    cat <<EOS
    NAME
      $pname - ssh to multiple hosts with tmux.

    SYNOPSYS
      $pname open file
      $pname send '#{pane_index}'
      $pname exec 'command'
      $pname password
      $pname close

    DESCRIPTION
      $ cat host.list
      host1
      host2
      host3
      $ $pname open host.list
        ssh to host1 host2 host3 in separate tmux window.
      $ $pname send '#{pane_index}'
        send-keys to all panes.
        In this example, pane_index is sent. host1:0 host2:1 host3:2 respectively.
        see: http://man.openbsd.org/OpenBSD-current/man1/tmux.1#FORMATS
      $ $pname exec 'command'
        execute command on each hosts.
      $ $pname password
        send password to each hosts.
      $ $pname close
        close opened windows.
EOS
    exit 1
}

## open a file that contains a host name per line and then ssh to them.
do_open () {
    local f=$1
    local window=1

    tmux new-session -s "$sn" -n main -d
    tmux new-window -t "$sn:$window" -n ''

    while read host
    do
        tmux send-keys -t "$sn:$window" "ssh $host" C-m
        # NOTE: need to set layout each time because the window resized
        tmux select-layout -t "$sn:$window" tiled
        tmux split-window -t "$sn:$window"
        $SLEEP $SLEEP_ARG
    done < "$f"

    # kill last unused pane
    tmux kill-pane -t "$sn:$window"

    tmux select-window -t "$sn:$window"
    tmux set-window-option synchronize-panes on
    tmux -2 attach-session -t "$sn"
}

do_exec () {
    local window
    for window in `tmux list-windows -F '#{window_index}' | grep -v '0'`;
    do
        tmux send-keys -t "$sn:$window" "$@" C-m
    done
}

do_close () {
    tmux kill-session -t "$sn"
}

# set echo back considering Ctrl-C while "stty -echo".
trap "stty echo; exit 100" 2

do_password () {
    local pwd
    printf "Password:"
    stty -echo
    read pwd
    for window in `tmux list-windows -F '#{window_index}' | grep -v '0'`;
    do
        tmux send-keys -t "$sn:$window" "$pwd" C-m
    done
    stty echo
}

do_send () {
    local cmd=$1

    tmux set-window-option -t 'tmux:1' synchronize-panes off

    local commands=$(tmux list-panes -t 'tmux:1' -F "$cmd")
    tmux select-window -t 'tmux:1'
    local cnt=0
    for command in $commands
    do
        tmux select-pane -t "$cnt"
        tmux send-keys -t 'tmux:1' "$command"
        cnt=$(( $cnt + 1 ))
    done

    tmux set-window-option -t 'tmux:1' synchronize-panes on
}

exit_with_msg () {
    local msg="$1"
    local status="$2"
    echo "ERROR: $msg"
    exit "$status"
}

prepare () {
    # OS specific settings.
    local os=`uname`
    case "$os" in
        "Darwin" )
            SLEEP="sleep"
            SLEEP_ARG=0.2 # 200 [msec]
            ;;
        "Linux" )
            SLEEP="usleep"
            SLEEP_ARG=200000 # 200 [msec]
            ;;
        *)
            exit_with_msg "OS <$os> is not supported." 10
            ;;
    esac
}

main () {
    prepare

    local command=$1

    case "$command" in
        "open" )
            local file=$2
            [ ! -f "$file" ] && usage
            do_open "$file"
            ;;
        "exec" )
            local command=$2
            [ "X$command" = "X" ] && usage
            do_exec "$command"
            ;;
        "close" )
            do_close
            ;;
        "password" )
            do_password
            ;;
        "send" )
            local cmd="$2"
            do_send "$cmd"
            ;;
        *)
            usage
            ;;
    esac
}

main "$@"

exit $?
